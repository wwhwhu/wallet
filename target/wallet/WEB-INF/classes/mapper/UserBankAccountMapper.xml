<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.db.mapper.UserBankAccountMapper">
  <resultMap id="BaseResultMap" type="com.db.entity.UserBankAccount">
    <id column="user_account_id" jdbcType="INTEGER" property="userAccountId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="account_id" jdbcType="INTEGER" property="accountId" />
    <result column="is_primary" jdbcType="BIT" property="isPrimary" />
    <result column="is_verified" jdbcType="BIT" property="isVerified" />
  </resultMap>
  <sql id="Base_Column_List">
    user_account_id, user_id, account_id, is_primary, is_verified
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from UserBankAccount
    where user_account_id = #{userAccountId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from UserBankAccount
    where user_account_id = #{userAccountId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByUserAccount" parameterType="com.db.entity.UserBankAccount">
    delete from UserBankAccount
    where user_id = #{userId,jdbcType=INTEGER} and account_id = #{accountId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.db.entity.UserBankAccount" useGeneratedKeys="true" keyProperty="user_account_id">
    insert into UserBankAccount (user_account_id, user_id, account_id, 
      is_primary, is_verified)
    values (#{userAccountId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{accountId,jdbcType=INTEGER}, 
      #{isPrimary,jdbcType=BIT}, #{isVerified,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.db.entity.UserBankAccount">
    insert into UserBankAccount
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userAccountId != null">
        user_account_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="accountId != null">
        account_id,
      </if>
      <if test="isPrimary != null">
        is_primary,
      </if>
      <if test="isVerified != null">
        is_verified,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userAccountId != null">
        #{userAccountId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="accountId != null">
        #{accountId,jdbcType=INTEGER},
      </if>
      <if test="isPrimary != null">
        #{isPrimary,jdbcType=BIT},
      </if>
      <if test="isVerified != null">
        #{isVerified,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.db.entity.UserBankAccount">
    update UserBankAccount
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="accountId != null">
        account_id = #{accountId,jdbcType=INTEGER},
      </if>
      <if test="isPrimary != null">
        is_primary = #{isPrimary,jdbcType=BIT},
      </if>
      <if test="isVerified != null">
        is_verified = #{isVerified,jdbcType=BIT},
      </if>
    </set>
    where user_account_id = #{userAccountId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.db.entity.UserBankAccount">
    update UserBankAccount
    set user_id = #{userId,jdbcType=INTEGER},
      account_id = #{accountId,jdbcType=INTEGER},
      is_primary = #{isPrimary,jdbcType=BIT},
      is_verified = #{isVerified,jdbcType=BIT}
    where user_account_id = #{userAccountId,jdbcType=INTEGER}
  </update>
  <update id="changePrimaryAccount" parameterType="com.db.entity.UserBankAccount">
    UPDATE UserBankAccount
    SET is_primary = CASE
    WHEN account_id = #{accountId,jdbcType=INTEGER} THEN true
    ELSE false
    END
    WHERE user_id = #{userId,jdbcType=INTEGER}
  </update>
  <select id="searchUserAccount" parameterType="java.lang.Integer" resultType="Integer">
    select account_id
    <include refid="Base_Column_List" />
    from UserBankAccount
    where user_id = #{userId,jdbcType=INTEGER}
  </select>

  <select id="searchAccountUser" parameterType="java.lang.Integer" resultType="Integer">
    select user_id
    <include refid="Base_Column_List" />
    from UserBankAccount
    where account_id = #{accountId,jdbcType=INTEGER}
  </select>

  <select id="searchAllAccountInfo" parameterType="java.lang.Integer" resultType="com.db.util.AccountAll">
    SELECT *
    FROM
         UserBankAccount u
            INNER JOIN
         BankAccount b ON u.account_id = b.account_id
    WHERE u.user_id = #{userId,jdbcType=INTEGER}
  </select>

  <select id="selectByUserAccount" parameterType="com.db.entity.UserBankAccount" resultType="Integer">
    select user_account_id
    <include refid="Base_Column_List" />
    from UserBankAccount
    where user_id = #{userId,jdbcType=INTEGER} and account_id = #{accountId,jdbcType=INTEGER}
  </select>

  <select id="isPrimaryAccount" parameterType="com.db.entity.UserBankAccount" resultType="Boolean">
    select is_primary
    <include refid="Base_Column_List" />
    from UserBankAccount
    where user_id = #{userId,jdbcType=INTEGER} and account_id = #{accountId,jdbcType=INTEGER}
  </select>
</mapper>